function postsChart(n){const t=moment(n||"2020-01"),e=moment(),a=new Map,o=864e5;for(let n=t;n<=e;n+=o){const t=moment(n).format("YYYY-MM");a.has(t)||a.set(t,0)}hexo.locals.get("posts").forEach(function(n){const t=n.date.format("YYYY-MM");a.has(t)&&a.set(t,a.get(t)+1)});const r=JSON.stringify([...a.keys()]),s=JSON.stringify([...a.values()]);return`\n  <script id="postsChart">\n    var color = document.documentElement.getAttribute('data-theme') === 'light' ? '#4c4948' : 'rgba(255,255,255,0.7)'\n    var postsChart = echarts.init(document.getElementById('posts-chart'), 'light');\n    var postsOption = {\n      title: {\n        text: '文章发布统计图',\n        x: 'center',\n        textStyle: {\n          color: color\n        }\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      xAxis: {\n        name: '日期',\n        type: 'category',\n        boundaryGap: false,\n        nameTextStyle: {\n          color: color\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          show: true,\n          color: color\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: color\n          }\n        },\n        data: ${r}\n      },\n      yAxis: {\n        name: '文章篇数',\n        type: 'value',\n        nameTextStyle: {\n          color: color\n        },\n        splitLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          show: true,\n          color: color\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: color\n          }\n        }\n      },\n      series: [{\n        name: '文章篇数',\n        type: 'line',\n        smooth: true,\n        lineStyle: {\n            width: 0\n        },\n        showSymbol: false,\n        itemStyle: {\n          opacity: 1,\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: 'rgba(128, 255, 165)'\n          },\n          {\n            offset: 1,\n            color: 'rgba(1, 191, 236)'\n          }])\n        },\n        areaStyle: {\n          opacity: 1,\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: 'rgba(128, 255, 165)'\n          }, {\n            offset: 1,\n            color: 'rgba(1, 191, 236)'\n          }])\n        },\n        data: ${s},\n        markLine: {\n          data: [{\n            name: '平均值',\n            type: 'average',\n            label: {\n              color: color\n            }\n          }]\n        }\n      }]\n    };\n    postsChart.setOption(postsOption);\n    window.addEventListener('resize', () => { \n      postsChart.resize();\n    });\n    postsChart.on('click', 'series', (event) => {\n      if (event.componentType === 'series') window.location.href = '/archives/' + event.name.replace('-', '/');\n    });\n  </script>`}function tagsChart(n){const t=[];hexo.locals.get("tags").map(function(n){t.push({name:n.name,value:n.length,path:n.path})}),t.sort((n,t)=>t.value-n.value);const e=Math.min(t.length,n)||t.length,a=[];for(let n=0;n<e;n++)a.push(t[n].name);const o=JSON.stringify(a),r=JSON.stringify(t);return`\n  <script id="tagsChart">\n    var color = document.documentElement.getAttribute('data-theme') === 'light' ? '#4c4948' : 'rgba(255,255,255,0.7)'\n    var tagsChart = echarts.init(document.getElementById('tags-chart'), 'light');\n    var tagsOption = {\n      title: {\n        text: 'Top ${e} 标签统计图',\n        x: 'center',\n        textStyle: {\n          color: color\n        }\n      },\n      tooltip: {},\n      xAxis: {\n        name: '标签',\n        type: 'category',\n        nameTextStyle: {\n          color: color\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          show: true,\n          color: color,\n          interval: 0\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: color\n          }\n        },\n        data: ${o}\n      },\n      yAxis: {\n        name: '文章篇数',\n        type: 'value',\n        splitLine: {\n          show: false\n        },\n        nameTextStyle: {\n          color: color\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          show: true,\n          color: color\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: color\n          }\n        }\n      },\n      series: [{\n        name: '文章篇数',\n        type: 'bar',\n        data: ${r},\n        itemStyle: {\n          borderRadius: [5, 5, 0, 0],\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: 'rgba(128, 255, 165)'\n          },\n          {\n            offset: 1,\n            color: 'rgba(1, 191, 236)'\n          }])\n        },\n        emphasis: {\n          itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgba(128, 255, 195)'\n            },\n            {\n              offset: 1,\n              color: 'rgba(1, 211, 255)'\n            }])\n          }\n        },\n        markLine: {\n          data: [{\n            name: '平均值',\n            type: 'average',\n            label: {\n              color: color\n            }\n          }]\n        }\n      }]\n    };\n    tagsChart.setOption(tagsOption);\n    window.addEventListener('resize', () => { \n      tagsChart.resize();\n    });\n    tagsChart.on('click', 'series', (event) => {\n      if(event.data.path) window.location.href = '/' + event.data.path;\n    });\n  </script>`}function categoriesChart(n){function t(n,e){let a,o=[];return n.forEach((r,s)=>{if(n[s].parentId==e){let e=n[s];a=t(n,n[s].id),a.length>0&&(e.children=a),o.indexOf()&&o.push(e)}}),o}const e=[];let a=!1;hexo.locals.get("categories").map(function(n){n.parent&&(a=!0),e.push({name:n.name,value:n.length,path:n.path,id:n._id,parentId:n.parent||"0"})}),a=a&&"true"===n,e.sort((n,t)=>t.value-n.value);const o=JSON.stringify(e.map(function(n){return n.name})),r=JSON.stringify(e),s=JSON.stringify(t(e,"0"));return`\n  <script id="categoriesChart">\n    var color = document.documentElement.getAttribute('data-theme') === 'light' ? '#4c4948' : 'rgba(255,255,255,0.7)'\n    var categoriesChart = echarts.init(document.getElementById('categories-chart'), 'light');\n    var categoryParentFlag = ${a}\n    var categoriesOption = {\n      title: {\n        text: '文章分类统计图',\n        x: 'center',\n        textStyle: {\n          color: color\n        }\n      },\n      legend: {\n        top: 'bottom',\n        data: ${o},\n        textStyle: {\n          color: color\n        }\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      series: []\n    };\n    categoriesOption.series.push(\n      categoryParentFlag ? \n      {\n        nodeClick :false,\n        name: '文章篇数',\n        type: 'sunburst',\n        radius: ['15%', '90%'],\n        center: ['50%', '55%'],\n        sort: 'desc',\n        data: ${s},\n        itemStyle: {\n          borderColor: '#fff',\n          borderWidth: 2,\n          emphasis: {\n            focus: 'ancestor',\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(255, 255, 255, 0.5)'\n          }\n        }\n      }\n      :\n      {\n        name: '文章篇数',\n        type: 'pie',\n        radius: [30, 80],\n        roseType: 'area',\n        label: {\n          color: color,\n          formatter: '{b} : {c} ({d}%)'\n        },\n        data: ${r},\n        itemStyle: {\n          emphasis: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(255, 255, 255, 0.5)'\n          }\n        }\n      }\n    )\n    categoriesChart.setOption(categoriesOption);\n    window.addEventListener('resize', () => { \n      categoriesChart.resize();\n    });\n    categoriesChart.on('click', 'series', (event) => {\n      if(event.data.path) window.location.href = '/' + event.data.path;\n    });\n  </script>`}const cheerio=require("cheerio"),moment=require("moment");hexo.extend.filter.register("after_render:html",function(n){const t=cheerio.load(n),e=t("#posts-chart"),a=t("#tags-chart"),o=t("#categories-chart"),r=!1;return e.length>0||a.length>0||o.length>0?(e.length>0&&0===t("#postsChart").length&&("true"===e.attr("data-encode")&&(r=!0),e.after(postsChart(e.attr("data-start")))),a.length>0&&0===t("#tagsChart").length&&("true"===a.attr("data-encode")&&(r=!0),a.after(tagsChart(a.attr("data-length")))),o.length>0&&0===t("#categoriesChart").length&&("true"===o.attr("data-encode")&&(r=!0),o.after(categoriesChart(o.attr("data-parent")))),r?t.root().html().replace(/&amp;#/g,"&#"):t.root().html()):n},15);